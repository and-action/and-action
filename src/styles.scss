// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
@include mat.all-component-typographies();
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$and-action-primary: mat.define-palette(mat.$green-palette, 800, 700, 900);
$and-action-accent: mat.define-palette(mat.$brown-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$and-action-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$and-action-theme: mat.define-light-theme(
  (
    color: (
      primary: $and-action-primary,
      accent: $and-action-accent,
      warn: $and-action-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($and-action-theme);

@import 'colors';
@import 'variables';

.mat-mdc-dialog-container {
  --mdc-dialog-supporting-text-size: 14px;
  --mdc-dialog-supporting-text-color: $default-text-color;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  color: $default-text-color;
  background-color: $default-background-color;
}

a:not([class*='mdc-button']) {
  text-decoration: none;
  color: $default-text-color;

  &:hover {
    text-decoration: underline;
    color: $default-text-color-hover;
  }

  &:active {
    color: $default-text-color-active;
  }
}

a.text-link {
  color: mat.get-color-from-palette($and-action-primary);

  &:hover {
    text-decoration: underline;
    color: mat.get-color-from-palette($and-action-primary, 900);
  }

  &:active {
    color: mat.get-color-from-palette($and-action-primary, 900);
  }
}

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.button-list {
  display: flex;
  justify-content: flex-end;

  a,
  button {
    margin-left: $space-s;
  }
}

.u-margin-right {
  &-xxs {
    margin-right: $space-xxs;
  }
  &-xs {
    margin-right: $space-xs;
  }
  &-s {
    margin-right: $space-s;
  }
  &-m {
    margin-right: $space-m;
  }
  &-l {
    margin-right: $space-l;
  }
  &-xl {
    margin-right: $space-xl;
  }
  &-xxl {
    margin-right: $space-xxl;
  }
}

.u-margin-bottom {
  &-xxs {
    margin-bottom: $space-xxs;
  }
  &-xs {
    margin-bottom: $space-xs;
  }
  &-s {
    margin-bottom: $space-s;
  }
  &-m {
    margin-bottom: $space-m;
  }
  &-l {
    margin-bottom: $space-l;
  }
  &-xl {
    margin-bottom: $space-xl;
  }
  &-xxl {
    margin-bottom: $space-xxl;
  }
}

.u-text-placeholder {
  color: $secondary-text-color;
}

.u-text-secondary {
  color: $secondary-text-color;
}

.u-nowrap {
  white-space: nowrap;
}

.u-text-bold {
  font-weight: bold;
}

.form-error {
  color: mat.get-color-from-palette($and-action-warn, 800);
}

.u-flex {
  display: flex;
}

.tooltip {
  font-size: $font-size-s;
  background-color: $background-color-dark;
  color: $white;
  padding: $space-xxs $space-xs;
  border-radius: $default-border-radius;
  opacity: 0.9;
  z-index: 200;

  p:last-child {
    margin: 0;
  }
}

.progress-spinner {
  margin: 80px auto 0 auto;
}

.view-placeholder {
  color: $secondary-text-color;
  margin-top: 80px;
  text-align: center;
  font-size: $font-size-l;
}
